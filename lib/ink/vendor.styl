@import 'config'

/*
 * Vendor support for the given prop / arguments,
 * optionally specifying the only prefixes to utilize,
 * or those which should be ignored.
 */

vendorValue(prop,value)
  for prefix in vendor_prefixes
    if prefix is "official"
      {prop} unquote(value)
    else
      prefixed_value = "-"+ prefix +"-"+ value  
      add-property(prop, unquote(prefixed_value))
    
//see more at https://developer.mozilla.org/en/CSS/CSS_transitions
vendor_transition_properties = "transform" "transform-origin"

justVendorValue(val,type,vendor_prefix)
  if type is "transition-property"
    for transition_prop,i in val
      //p transition_prop
      //p vendor_transition_properties
      //p transition_prop in vendor_transition_properties
      if transition_prop in vendor_transition_properties
        transition_vendor_prop = s('-%s-%s',vendor_prefix,unquote(transition_prop))
        //p transition_vendor_prop
        if i is 0
          new_val = transition_vendor_prop
        else 
          push(new_val,transition_vendor_prop) 

      else
        if i is 0
          new_val = unquote(transition_prop)
        else
          push(new_val,unquote(transition_prop)) 

  new_val = join(",",new_val)
  p new_val
  new_val



vendorProperty(prop, args, only = null, ignore = null, vendor_value=false)
  
  for prefix in vendor_prefixes
    unless (only and !(prefix in only)) or (ignore and prefix in ignore)

      if prefix is "official"
        {prop}: args

      else
        if vendor_value
          {'-' + prefix + '-' + prop}: justVendorValue(args,vendor_value,prefix)
        else
          {'-' + prefix + '-' + prop}: args



user-select()
  vendorProperty('user-select', arguments)



// COLUMN

column-count()
  vendorProperty('column-count', arguments)

column-gap()
  vendorProperty('column-gap', arguments)






// BACKGROUNDS AND BOARDERS

background-size()
  vendorProperty('background-size', arguments)

border-image()
  vendorProperty('border-image', arguments)




transform()
  vendorProperty('transform', arguments)

transform-origin()
  vendorProperty('transform-origin',arguments)


// TRANSITIONS

transition()
  vendorProperty('transition', arguments)

transition-delay()
  vendorProperty('transition-delay', arguments)

transition-duration()
  vendorProperty('transition-duration', arguments)

transition-timing-function()
  vendorProperty('transition-timing-function', arguments)

transition-property()
  vendorProperty('transition', arguments)


/*
 * Helper for border-radius().
 */

-apply-border-radius(pos)
  if length(pos) == 3
    // border-radius: <top | buttom> <left | right> <n>
    y = pos[0]
    x = pos[1]
    vendorProperty('border-radius-%s%s' % pos, pos[2], only: moz)
    vendorProperty('border-%s-%s-radius' % pos, pos[2], ignore: moz)
  else if pos[0] in (top bottom)
    // border-radius: <top | bottom> <n>
    -apply-border-radius(pos[0] left pos[1])
    -apply-border-radius(pos[0] right pos[1])
  else if pos[0] in (left right)
    // border-radius: <left | right> <n>
    unshift(pos, top);
    -apply-border-radius(pos)
    pos[0] = bottom
    -apply-border-radius(pos)

/*
 * border-radius supporting vendor prefixes and
 * augmented behavior.
 * 
 * Examples:
 *
 *    border-radius: 2px 5px
 *    border-radius: top 5px bottom 10px
 *    border-radius: left 5px
 *    border-radius: top left 5px
 *    border-radius: top left 10px bottom right 5px
 *    border-radius: top left 10px, bottom right 5px
 *
 */

border-radius()
  pos = ()
  augmented = false
  for args in arguments
    for arg in args
      if arg is a 'ident'
        append(pos, arg)
        augmented = true
      else
        append(pos, arg)
        if augmented
          -apply-border-radius(pos)
          pos = ()
  vendorProperty('border-radius', pos) unless augmented






// BOX

box-orient()
    vendorProperty('box-orient', arguments)

box-pack()
    vendorProperty('box-pack',arguments)

box-align()
    vendorProperty('box-align',arguments)

box-ordinal-group()
    vendorProperty('box-ordinal-group',arguments)

box-direction()
    vendorProperty('box-direction',arguments)

box-flex-group()
    vendorProperty('box-flex-group',arguments)

box-lines()
    vendorProperty('box-lines',arguments)

box-sizing()
    vendorProperty('box-sizing',arguments)

//on sub-elements of a box
box-flex()
    vendorProperty('box-flex', arguments)

box(flexes=false,orient="horizontal",align="start")
    vendorValue("display","box")
    box-orient unquote(orient)
    box-pack unquote(align)

    if flexes isnt false
        for flex,i in flexes
            & > *:nth-child({i+1})
                box-flex flex

box-shadow()
  vendorProperty('box-shadow', arguments)

box-sizing()
  vendorProperty('box-sizing', arguments)
